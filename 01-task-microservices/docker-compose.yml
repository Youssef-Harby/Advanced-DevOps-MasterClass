version: '3.4'
services:
  app1:
    build: .
    container_name: app1
    command: ["poetry", "run", "start"]
    image: yharby/devops-microservices-task1:0.1.0
    ports:
      - '8000:8000'
    restart: always
    volumes:
      - app-data:/app
    networks:
      - private_network
      - public_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://app1:8000/api/healthchecker"]
      interval: 30s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15.3
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/custom_data
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - db-data:/var/lib/postgresql/custom_data
    networks:
      - private_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5
    env_file:
      - .env

networks:
  private_network:
    driver: bridge
    internal: true
  public_network:
    driver: bridge

volumes:
  app-data:
  db-data:
